// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.25.0
// source: dy_pay.proto

package douyin_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 支付参数
type PayTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutOrderNo       string       `protobuf:"bytes,1,opt,name=OutOrderNo,proto3" json:"OutOrderNo,omitempty"`
	TotalAmount      float32      `protobuf:"fixed32,2,opt,name=TotalAmount,proto3" json:"TotalAmount,omitempty"`
	PayExpireSeconds uint32       `protobuf:"varint,3,opt,name=PayExpireSeconds,proto3" json:"PayExpireSeconds,omitempty"`
	PayNotifyUrl     string       `protobuf:"bytes,4,opt,name=PayNotifyUrl,proto3" json:"PayNotifyUrl,omitempty"`
	MerchantUid      string       `protobuf:"bytes,5,opt,name=MerchantUid,proto3" json:"MerchantUid,omitempty"`
	SkuList          []*SkuList   `protobuf:"bytes,6,rep,name=SkuList,proto3" json:"SkuList,omitempty"`
	OrderEntrySchema *EntrySchema `protobuf:"bytes,7,opt,name=OrderEntrySchema,proto3" json:"OrderEntrySchema,omitempty"`
	LimitPayWayList  []uint32     `protobuf:"varint,8,rep,packed,name=LimitPayWayList,proto3" json:"LimitPayWayList,omitempty"`
	AppId            string       `protobuf:"bytes,9,opt,name=AppId,proto3" json:"AppId,omitempty"`
	Secret           string       `protobuf:"bytes,10,opt,name=Secret,proto3" json:"Secret,omitempty"`
	PrivateKey       string       `protobuf:"bytes,11,opt,name=PrivateKey,proto3" json:"PrivateKey,omitempty"`
	KeyVersion       string       `protobuf:"bytes,12,opt,name=KeyVersion,proto3" json:"KeyVersion,omitempty"`
}

func (x *PayTransactionRequest) Reset() {
	*x = PayTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dy_pay_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayTransactionRequest) ProtoMessage() {}

func (x *PayTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dy_pay_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayTransactionRequest.ProtoReflect.Descriptor instead.
func (*PayTransactionRequest) Descriptor() ([]byte, []int) {
	return file_dy_pay_proto_rawDescGZIP(), []int{0}
}

func (x *PayTransactionRequest) GetOutOrderNo() string {
	if x != nil {
		return x.OutOrderNo
	}
	return ""
}

func (x *PayTransactionRequest) GetTotalAmount() float32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *PayTransactionRequest) GetPayExpireSeconds() uint32 {
	if x != nil {
		return x.PayExpireSeconds
	}
	return 0
}

func (x *PayTransactionRequest) GetPayNotifyUrl() string {
	if x != nil {
		return x.PayNotifyUrl
	}
	return ""
}

func (x *PayTransactionRequest) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *PayTransactionRequest) GetSkuList() []*SkuList {
	if x != nil {
		return x.SkuList
	}
	return nil
}

func (x *PayTransactionRequest) GetOrderEntrySchema() *EntrySchema {
	if x != nil {
		return x.OrderEntrySchema
	}
	return nil
}

func (x *PayTransactionRequest) GetLimitPayWayList() []uint32 {
	if x != nil {
		return x.LimitPayWayList
	}
	return nil
}

func (x *PayTransactionRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *PayTransactionRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *PayTransactionRequest) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *PayTransactionRequest) GetKeyVersion() string {
	if x != nil {
		return x.KeyVersion
	}
	return ""
}

type SkuList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId       string       `protobuf:"bytes,1,opt,name=SkuId,proto3" json:"SkuId,omitempty"`
	Price       float32      `protobuf:"fixed32,2,opt,name=Price,proto3" json:"Price,omitempty"`
	Quantity    uint32       `protobuf:"varint,3,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	Title       string       `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	ImageList   []string     `protobuf:"bytes,5,rep,name=ImageList,proto3" json:"ImageList,omitempty"`
	Type        uint32       `protobuf:"varint,6,opt,name=Type,proto3" json:"Type,omitempty"`
	TagGroupId  string       `protobuf:"bytes,7,opt,name=TagGroupId,proto3" json:"TagGroupId,omitempty"`
	EntrySchema *EntrySchema `protobuf:"bytes,8,opt,name=EntrySchema,proto3" json:"EntrySchema,omitempty"`
	SkuAttr     string       `protobuf:"bytes,9,opt,name=SkuAttr,proto3" json:"SkuAttr,omitempty"`
}

func (x *SkuList) Reset() {
	*x = SkuList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dy_pay_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuList) ProtoMessage() {}

func (x *SkuList) ProtoReflect() protoreflect.Message {
	mi := &file_dy_pay_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuList.ProtoReflect.Descriptor instead.
func (*SkuList) Descriptor() ([]byte, []int) {
	return file_dy_pay_proto_rawDescGZIP(), []int{1}
}

func (x *SkuList) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *SkuList) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SkuList) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SkuList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SkuList) GetImageList() []string {
	if x != nil {
		return x.ImageList
	}
	return nil
}

func (x *SkuList) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SkuList) GetTagGroupId() string {
	if x != nil {
		return x.TagGroupId
	}
	return ""
}

func (x *SkuList) GetEntrySchema() *EntrySchema {
	if x != nil {
		return x.EntrySchema
	}
	return nil
}

func (x *SkuList) GetSkuAttr() string {
	if x != nil {
		return x.SkuAttr
	}
	return ""
}

type EntrySchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Params string `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
}

func (x *EntrySchema) Reset() {
	*x = EntrySchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dy_pay_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntrySchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrySchema) ProtoMessage() {}

func (x *EntrySchema) ProtoReflect() protoreflect.Message {
	mi := &file_dy_pay_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrySchema.ProtoReflect.Descriptor instead.
func (*EntrySchema) Descriptor() ([]byte, []int) {
	return file_dy_pay_proto_rawDescGZIP(), []int{2}
}

func (x *EntrySchema) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *EntrySchema) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type PayTransactionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data              string `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	ByteAuthorization string `protobuf:"bytes,2,opt,name=ByteAuthorization,proto3" json:"ByteAuthorization,omitempty"`
}

func (x *PayTransactionReply) Reset() {
	*x = PayTransactionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dy_pay_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayTransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayTransactionReply) ProtoMessage() {}

func (x *PayTransactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_dy_pay_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayTransactionReply.ProtoReflect.Descriptor instead.
func (*PayTransactionReply) Descriptor() ([]byte, []int) {
	return file_dy_pay_proto_rawDescGZIP(), []int{3}
}

func (x *PayTransactionReply) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *PayTransactionReply) GetByteAuthorization() string {
	if x != nil {
		return x.ByteAuthorization
	}
	return ""
}

// 查询订单
type TransactionOrderQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId    string `protobuf:"bytes,1,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	OutOrderNo string `protobuf:"bytes,2,opt,name=OutOrderNo,proto3" json:"OutOrderNo,omitempty"`
	AppId      string `protobuf:"bytes,3,opt,name=AppId,proto3" json:"AppId,omitempty"`
	Secret     string `protobuf:"bytes,4,opt,name=Secret,proto3" json:"Secret,omitempty"`
}

func (x *TransactionOrderQueryRequest) Reset() {
	*x = TransactionOrderQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dy_pay_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionOrderQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionOrderQueryRequest) ProtoMessage() {}

func (x *TransactionOrderQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dy_pay_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionOrderQueryRequest.ProtoReflect.Descriptor instead.
func (*TransactionOrderQueryRequest) Descriptor() ([]byte, []int) {
	return file_dy_pay_proto_rawDescGZIP(), []int{4}
}

func (x *TransactionOrderQueryRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *TransactionOrderQueryRequest) GetOutOrderNo() string {
	if x != nil {
		return x.OutOrderNo
	}
	return ""
}

func (x *TransactionOrderQueryRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *TransactionOrderQueryRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type TransactionOrderQueryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionOrderQueryResult []byte `protobuf:"bytes,1,opt,name=TransactionOrderQueryResult,proto3" json:"TransactionOrderQueryResult,omitempty"`
}

func (x *TransactionOrderQueryReply) Reset() {
	*x = TransactionOrderQueryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dy_pay_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionOrderQueryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionOrderQueryReply) ProtoMessage() {}

func (x *TransactionOrderQueryReply) ProtoReflect() protoreflect.Message {
	mi := &file_dy_pay_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionOrderQueryReply.ProtoReflect.Descriptor instead.
func (*TransactionOrderQueryReply) Descriptor() ([]byte, []int) {
	return file_dy_pay_proto_rawDescGZIP(), []int{5}
}

func (x *TransactionOrderQueryReply) GetTransactionOrderQueryResult() []byte {
	if x != nil {
		return x.TransactionOrderQueryResult
	}
	return nil
}

// 发起退款
type RefundTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId           string             `protobuf:"bytes,1,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	OutRefundNo       string             `protobuf:"bytes,2,opt,name=OutRefundNo,proto3" json:"OutRefundNo,omitempty"`
	RefundTotalAmount float32            `protobuf:"fixed32,3,opt,name=RefundTotalAmount,proto3" json:"RefundTotalAmount,omitempty"`
	RefundReason      []*RefundReason    `protobuf:"bytes,4,rep,name=RefundReason,proto3" json:"RefundReason,omitempty"`
	RefundNotifyUrl   string             `protobuf:"bytes,5,opt,name=RefundNotifyUrl,proto3" json:"RefundNotifyUrl,omitempty"`
	CpExtra           string             `protobuf:"bytes,6,opt,name=CpExtra,proto3" json:"CpExtra,omitempty"`
	RefundAll         bool               `protobuf:"varint,7,opt,name=RefundAll,proto3" json:"RefundAll,omitempty"`
	OrderEntrySchema  *EntrySchema       `protobuf:"bytes,8,opt,name=OrderEntrySchema,proto3" json:"OrderEntrySchema,omitempty"`
	ItemOrderDetail   []*ItemOrderDetail `protobuf:"bytes,9,rep,name=ItemOrderDetail,proto3" json:"ItemOrderDetail,omitempty"`
	AppId             string             `protobuf:"bytes,10,opt,name=AppId,proto3" json:"AppId,omitempty"`
	Secret            string             `protobuf:"bytes,11,opt,name=Secret,proto3" json:"Secret,omitempty"`
}

func (x *RefundTransactionRequest) Reset() {
	*x = RefundTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dy_pay_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundTransactionRequest) ProtoMessage() {}

func (x *RefundTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dy_pay_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundTransactionRequest.ProtoReflect.Descriptor instead.
func (*RefundTransactionRequest) Descriptor() ([]byte, []int) {
	return file_dy_pay_proto_rawDescGZIP(), []int{6}
}

func (x *RefundTransactionRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *RefundTransactionRequest) GetOutRefundNo() string {
	if x != nil {
		return x.OutRefundNo
	}
	return ""
}

func (x *RefundTransactionRequest) GetRefundTotalAmount() float32 {
	if x != nil {
		return x.RefundTotalAmount
	}
	return 0
}

func (x *RefundTransactionRequest) GetRefundReason() []*RefundReason {
	if x != nil {
		return x.RefundReason
	}
	return nil
}

func (x *RefundTransactionRequest) GetRefundNotifyUrl() string {
	if x != nil {
		return x.RefundNotifyUrl
	}
	return ""
}

func (x *RefundTransactionRequest) GetCpExtra() string {
	if x != nil {
		return x.CpExtra
	}
	return ""
}

func (x *RefundTransactionRequest) GetRefundAll() bool {
	if x != nil {
		return x.RefundAll
	}
	return false
}

func (x *RefundTransactionRequest) GetOrderEntrySchema() *EntrySchema {
	if x != nil {
		return x.OrderEntrySchema
	}
	return nil
}

func (x *RefundTransactionRequest) GetItemOrderDetail() []*ItemOrderDetail {
	if x != nil {
		return x.ItemOrderDetail
	}
	return nil
}

func (x *RefundTransactionRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *RefundTransactionRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type RefundReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=Text,proto3" json:"Text,omitempty"`
}

func (x *RefundReason) Reset() {
	*x = RefundReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dy_pay_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundReason) ProtoMessage() {}

func (x *RefundReason) ProtoReflect() protoreflect.Message {
	mi := &file_dy_pay_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundReason.ProtoReflect.Descriptor instead.
func (*RefundReason) Descriptor() ([]byte, []int) {
	return file_dy_pay_proto_rawDescGZIP(), []int{7}
}

func (x *RefundReason) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RefundReason) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ItemOrderDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemOrderId  string  `protobuf:"bytes,1,opt,name=ItemOrderId,proto3" json:"ItemOrderId,omitempty"`
	RefundAmount float32 `protobuf:"fixed32,2,opt,name=RefundAmount,proto3" json:"RefundAmount,omitempty"`
}

func (x *ItemOrderDetail) Reset() {
	*x = ItemOrderDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dy_pay_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemOrderDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemOrderDetail) ProtoMessage() {}

func (x *ItemOrderDetail) ProtoReflect() protoreflect.Message {
	mi := &file_dy_pay_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemOrderDetail.ProtoReflect.Descriptor instead.
func (*ItemOrderDetail) Descriptor() ([]byte, []int) {
	return file_dy_pay_proto_rawDescGZIP(), []int{8}
}

func (x *ItemOrderDetail) GetItemOrderId() string {
	if x != nil {
		return x.ItemOrderId
	}
	return ""
}

func (x *ItemOrderDetail) GetRefundAmount() float32 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

type RefundTransactionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefundTransactionResult []byte `protobuf:"bytes,1,opt,name=RefundTransactionResult,proto3" json:"RefundTransactionResult,omitempty"`
}

func (x *RefundTransactionReply) Reset() {
	*x = RefundTransactionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dy_pay_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundTransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundTransactionReply) ProtoMessage() {}

func (x *RefundTransactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_dy_pay_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundTransactionReply.ProtoReflect.Descriptor instead.
func (*RefundTransactionReply) Descriptor() ([]byte, []int) {
	return file_dy_pay_proto_rawDescGZIP(), []int{9}
}

func (x *RefundTransactionReply) GetRefundTransactionResult() []byte {
	if x != nil {
		return x.RefundTransactionResult
	}
	return nil
}

// 查询退款
type RefundTransactionQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId     string `protobuf:"bytes,1,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	OutRefundNo string `protobuf:"bytes,2,opt,name=OutRefundNo,proto3" json:"OutRefundNo,omitempty"`
	RefundId    string `protobuf:"bytes,3,opt,name=RefundId,proto3" json:"RefundId,omitempty"`
	AppId       string `protobuf:"bytes,4,opt,name=AppId,proto3" json:"AppId,omitempty"`
	Secret      string `protobuf:"bytes,5,opt,name=Secret,proto3" json:"Secret,omitempty"`
}

func (x *RefundTransactionQueryRequest) Reset() {
	*x = RefundTransactionQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dy_pay_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundTransactionQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundTransactionQueryRequest) ProtoMessage() {}

func (x *RefundTransactionQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dy_pay_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundTransactionQueryRequest.ProtoReflect.Descriptor instead.
func (*RefundTransactionQueryRequest) Descriptor() ([]byte, []int) {
	return file_dy_pay_proto_rawDescGZIP(), []int{10}
}

func (x *RefundTransactionQueryRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *RefundTransactionQueryRequest) GetOutRefundNo() string {
	if x != nil {
		return x.OutRefundNo
	}
	return ""
}

func (x *RefundTransactionQueryRequest) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *RefundTransactionQueryRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *RefundTransactionQueryRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type RefundTransactionQueryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefundTransactionQueryResult []byte `protobuf:"bytes,1,opt,name=RefundTransactionQueryResult,proto3" json:"RefundTransactionQueryResult,omitempty"`
}

func (x *RefundTransactionQueryReply) Reset() {
	*x = RefundTransactionQueryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dy_pay_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundTransactionQueryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundTransactionQueryReply) ProtoMessage() {}

func (x *RefundTransactionQueryReply) ProtoReflect() protoreflect.Message {
	mi := &file_dy_pay_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundTransactionQueryReply.ProtoReflect.Descriptor instead.
func (*RefundTransactionQueryReply) Descriptor() ([]byte, []int) {
	return file_dy_pay_proto_rawDescGZIP(), []int{11}
}

func (x *RefundTransactionQueryReply) GetRefundTransactionQueryResult() []byte {
	if x != nil {
		return x.RefundTransactionQueryResult
	}
	return nil
}

var File_dy_pay_proto protoreflect.FileDescriptor

var file_dy_pay_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x64, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x62, 0x22, 0xd5, 0x03, 0x0a, 0x15, 0x50, 0x61,
	0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x10, 0x50, 0x61, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x61, 0x79, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x55, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x53, 0x6b, 0x75, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69,
	0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x53, 0x6b,
	0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0f, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x8d, 0x02, 0x0a, 0x07, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x6b,
	0x75, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x61, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x54, 0x61, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x0b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x0b, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6b, 0x75, 0x41, 0x74,
	0x74, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x6b, 0x75, 0x41, 0x74, 0x74,
	0x72, 0x22, 0x39, 0x0a, 0x0b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x57, 0x0a, 0x13,
	0x50, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x11, 0x42, 0x79, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x42, 0x79, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x1c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x5e,
	0x0a, 0x1a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40, 0x0a, 0x1b,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x1b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdb,
	0x03, 0x0a, 0x18, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x75, 0x74, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x12, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x11, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f,
	0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x70, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x70, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x41, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x41, 0x6c, 0x6c, 0x12, 0x42, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x44, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0f, 0x49,
	0x74, 0x65, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x36, 0x0a, 0x0c,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x65, 0x78, 0x74, 0x22, 0x57, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x74,
	0x65, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0a,
	0x16, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x17, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xa5, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x61, 0x0a, 0x1b, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42, 0x0a, 0x1c, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1c,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xa6, 0x03, 0x0a,
	0x05, 0x44, 0x79, 0x50, 0x61, 0x79, 0x12, 0x56, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x64, 0x6f, 0x75,
	0x79, 0x69, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64,
	0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6e,
	0x0a, 0x1a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x64,
	0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70,
	0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62,
	0x0a, 0x16, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69,
	0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x71, 0x0a, 0x1b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x28, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64, 0x6f,
	0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x18, 0x5a, 0x16, 0x2e, 0x2e, 0x2f, 0x64, 0x6f, 0x75, 0x79,
	0x69, 0x6e, 0x5f, 0x70, 0x62, 0x3b, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dy_pay_proto_rawDescOnce sync.Once
	file_dy_pay_proto_rawDescData = file_dy_pay_proto_rawDesc
)

func file_dy_pay_proto_rawDescGZIP() []byte {
	file_dy_pay_proto_rawDescOnce.Do(func() {
		file_dy_pay_proto_rawDescData = protoimpl.X.CompressGZIP(file_dy_pay_proto_rawDescData)
	})
	return file_dy_pay_proto_rawDescData
}

var file_dy_pay_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_dy_pay_proto_goTypes = []interface{}{
	(*PayTransactionRequest)(nil),         // 0: douyin_pb.PayTransactionRequest
	(*SkuList)(nil),                       // 1: douyin_pb.SkuList
	(*EntrySchema)(nil),                   // 2: douyin_pb.EntrySchema
	(*PayTransactionReply)(nil),           // 3: douyin_pb.PayTransactionReply
	(*TransactionOrderQueryRequest)(nil),  // 4: douyin_pb.TransactionOrderQueryRequest
	(*TransactionOrderQueryReply)(nil),    // 5: douyin_pb.TransactionOrderQueryReply
	(*RefundTransactionRequest)(nil),      // 6: douyin_pb.RefundTransactionRequest
	(*RefundReason)(nil),                  // 7: douyin_pb.RefundReason
	(*ItemOrderDetail)(nil),               // 8: douyin_pb.ItemOrderDetail
	(*RefundTransactionReply)(nil),        // 9: douyin_pb.RefundTransactionReply
	(*RefundTransactionQueryRequest)(nil), // 10: douyin_pb.RefundTransactionQueryRequest
	(*RefundTransactionQueryReply)(nil),   // 11: douyin_pb.RefundTransactionQueryReply
}
var file_dy_pay_proto_depIdxs = []int32{
	1,  // 0: douyin_pb.PayTransactionRequest.SkuList:type_name -> douyin_pb.SkuList
	2,  // 1: douyin_pb.PayTransactionRequest.OrderEntrySchema:type_name -> douyin_pb.EntrySchema
	2,  // 2: douyin_pb.SkuList.EntrySchema:type_name -> douyin_pb.EntrySchema
	7,  // 3: douyin_pb.RefundTransactionRequest.RefundReason:type_name -> douyin_pb.RefundReason
	2,  // 4: douyin_pb.RefundTransactionRequest.OrderEntrySchema:type_name -> douyin_pb.EntrySchema
	8,  // 5: douyin_pb.RefundTransactionRequest.ItemOrderDetail:type_name -> douyin_pb.ItemOrderDetail
	0,  // 6: douyin_pb.DyPay.TradeTransaction:input_type -> douyin_pb.PayTransactionRequest
	4,  // 7: douyin_pb.DyPay.TradeTransactionOrderQuery:input_type -> douyin_pb.TransactionOrderQueryRequest
	6,  // 8: douyin_pb.DyPay.TradeRefundTransaction:input_type -> douyin_pb.RefundTransactionRequest
	10, // 9: douyin_pb.DyPay.TradeRefundTransactionQuery:input_type -> douyin_pb.RefundTransactionQueryRequest
	3,  // 10: douyin_pb.DyPay.TradeTransaction:output_type -> douyin_pb.PayTransactionReply
	5,  // 11: douyin_pb.DyPay.TradeTransactionOrderQuery:output_type -> douyin_pb.TransactionOrderQueryReply
	9,  // 12: douyin_pb.DyPay.TradeRefundTransaction:output_type -> douyin_pb.RefundTransactionReply
	11, // 13: douyin_pb.DyPay.TradeRefundTransactionQuery:output_type -> douyin_pb.RefundTransactionQueryReply
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_dy_pay_proto_init() }
func file_dy_pay_proto_init() {
	if File_dy_pay_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dy_pay_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dy_pay_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dy_pay_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntrySchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dy_pay_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayTransactionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dy_pay_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionOrderQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dy_pay_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionOrderQueryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dy_pay_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dy_pay_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dy_pay_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemOrderDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dy_pay_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundTransactionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dy_pay_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundTransactionQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dy_pay_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundTransactionQueryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dy_pay_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dy_pay_proto_goTypes,
		DependencyIndexes: file_dy_pay_proto_depIdxs,
		MessageInfos:      file_dy_pay_proto_msgTypes,
	}.Build()
	File_dy_pay_proto = out.File
	file_dy_pay_proto_rawDesc = nil
	file_dy_pay_proto_goTypes = nil
	file_dy_pay_proto_depIdxs = nil
}
